name: Release Build

on:
  push:
    tags:
      - 'v*'  # Pattern for version tags (v1.0.0, v2.3.4, etc.)
    # branches: [ main ]
  workflow_dispatch: {}

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            /opt/hostedtoolcache/flutter
          key: flutter-deps-${{ hashFiles('pubspec.lock') }}
          
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/gradle-wrapper.properties', '**/build.gradle.kts') }}
          
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.0'
          channel: 'stable'
          
      - run: flutter pub get
      
      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE }}" > keystore.base64
          base64 -di keystore.base64 > android/app/upload-keystore.jks
          chmod 644 android/app/upload-keystore.jks

      - name: Build Split APKs
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: flutter build apk --split-per-abi --release

      - name: Get Version
        id: version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "RELEASE_TAG=v${TAG_VERSION}" >> $GITHUB_ENV

      - name: Rename APKs
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          for file in build/app/outputs/flutter-apk/app-*-release.apk; do
            if [ -f "$file" ]; then
              abi=$(echo "$file" | sed -E 's/build\/app\/outputs\/flutter-apk\/app-([a-z0-9]+)-release\.apk/\1/')
              new_name="tv-assassin-v${TAG_VERSION}-${abi}.apk"
              mv "$file" "$new_name"
              echo "RENAMED_APK_$abi=$new_name" >> $GITHUB_ENV
            fi
          done

      # Upload all APKs as workflow artifacts
      - name: Upload APK Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tv-assassin-apks
          path: |
            tv-assassin-v*-armeabi-v7a.apk
            tv-assassin-v*-arm64-v8a.apk
            tv-assassin-v*-x86_64.apk
          retention-days: 1

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: Release ${{ env.RELEASE_TAG }}
          draft: false
          prerelease: false
          files: |
            tv-assassin-v*-armeabi-v7a.apk
            tv-assassin-v*-arm64-v8a.apk
            tv-assassin-v*-x86_64.apk
